"
A GLPHModelImporterTest is a test class for testing the behavior of GLPHModelImporter
"
Class {
	#name : #GLPHModelImporterTest,
	#superclass : #TestCase,
	#instVars : [
		'fakeDiffData'
	],
	#category : #'GitLabProjectHealth-Model-Importer-Tests'
}

{ #category : #running }
GLPHModelImporterTest >> setUp [
	super setUp.

	fakeDiffData := '[
    {
        "diff": "@@ -15,6 +15,7 @@ import org.springframework.web.bind.annotation.RestController;\n import fr.bl.avenir.gf.rest.ecompta.BLFilterMappingJacksonValue;\n import fr.bl.avenir.gf.rest.ecompta.BodyVariable;\n import fr.bl.avenir.gf.rest.ecompta.communbaomtechnique.transverse.UseCaseIntfMetierControleur;\n+import fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.dto.ExecutionBudgetResource;\n import fr.magnus.activiteafinancer.transverse.ActiviteAFinancer;\n import fr.magnus.budget.transverse.APAE;\n import fr.magnus.budget.transverse.Budget;\n@@ -38,6 +39,7 @@ import fr.magnus.referentielcomptable.transverse.PieceModeleMouvement;\n import fr.magnus.referentielcomptable.transverse.Tribunal;\n import fr.magnus.referentielcomptable.transverse.enums.TypeGestionReelOrdre;\n import fr.magnus.referentielcomptable.transverse.enums.TypeGestionSens;\n+import fr.magnus.reftechnique.dao.config.PaginationData;\n import fr.magnus.reftechnique.transverse.association.Association;\n import fr.magnus.reftechnique.transverse.exception.UseCaseException;\n import fr.magnus.reftechnique.transverse.message.Echange;\n@@ -78,7 +80,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int id,\n             @BodyVariable final boolean chargerHistorique)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerLiq(id, chargerHistorique), fieldNames);\n     }\n \n@@ -86,7 +88,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TiersComptable> chargerTiersComptable(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final AliasTC alias)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerTiersComptable(alias), fieldNames);\n     }\n \n@@ -96,7 +98,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final ExerciceComptable exercice,\n             @BodyVariable final TypeGestionSens sens,\n             @BodyVariable final PieceModeleMouvement pmmvt)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirImputationDossierTravail(exercice, sens, pmmvt), fieldNames);\n     }\n \n@@ -104,7 +106,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<NormeComptable> chargerNormeComptable(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ExerciceComptable exercice)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerNormeComptable(exercice), fieldNames);\n     }\n \n@@ -112,7 +114,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> chargerListeLiquidationDetail(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final SelectionMandatTitre selCrit)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeLiquidationDetail(selCrit), fieldNames);\n     }\n \n@@ -123,7 +125,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final ExerciceComptable exercice,\n             @BodyVariable final Liquidation liquidationDestination,\n             @BodyVariable final boolean annuler)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.annulerEcriture(liquidationOrigine, exercice, liquidationDestination, annuler), fieldNames);\n     }\n \n@@ -131,7 +133,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauInfoErreur> rejeterLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liquidation)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.rejeterLiquidation(liquidation), fieldNames);\n     }\n \n@@ -139,7 +141,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<EchangeTableauLiquidation> rejeterLiquidationListe(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante<Liq> liqListe)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.rejeterLiquidationListe(liqListe), fieldNames);\n     }\n \n@@ -147,7 +149,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> chargerListeLiquidationDetailBao(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final SelectionMandatTitre selCrit)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeLiquidationDetailBao(selCrit), fieldNames);\n     }\n \n@@ -156,16 +158,28 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final RechercheParametres param,\n             @BodyVariable final String[] elementACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeExecutionBudget(param, elementACharger), fieldNames);\n     }\n \n+    @PostMapping(\"/chargerListeExecutionBudget2\")\n+    public BLFilterMappingJacksonValue<List<ExecutionBudgetResource>> chargerListeExecutionBudget2(\n+            @RequestParam(value = \"fieldNames[]\", required = false) String[] fieldNames,\n+            @BodyVariable final RechercheParametres param, @BodyVariable final String[] elementACharger)\n+                    throws RemoteException {\n+        PaginationData paginationData = new PaginationData(param.getPaginatorValues().getPageIndex(),\n+                param.getPaginatorValues().getPageSize());\n+\n+        return new BLFilterMappingJacksonValue<>(\n+                ucMandatTitreService.chargerListeExecutionBudget2(param, elementACharger), paginationData, fieldNames);\n+    }\n+\n     @PostMapping(\"/chargerExecutionBudget\")\n     public BLFilterMappingJacksonValue<ExecutionBudget> chargerExecutionBudget(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int id,\n             @BodyVariable final String[] elementACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerExecutionBudget(id, elementACharger), fieldNames);\n     }\n \n@@ -174,7 +188,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liquidation liquidation,\n             @BodyVariable final HashMap tableauEnUtilise)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeLigneNonDegage(liquidation, tableauEnUtilise), fieldNames);\n     }\n \n@@ -182,7 +196,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public Double fournirMontantAnnuleFromLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int liqId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.fournirMontantAnnuleFromLiquidation(liqId);\n     }\n \n@@ -191,7 +205,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ExerciceComptable exercice,\n             @BodyVariable final PieceModeleMouvement pmmvt)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.completerExerciceSaufListeCompte(exercice, pmmvt), fieldNames);\n     }\n \n@@ -199,7 +213,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> fournirListeLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ActiviteAFinancer aafNiveau3)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeLiquidation(aafNiveau3), fieldNames);\n     }\n \n@@ -207,7 +221,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> fournirListeLiquidation1(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ArrayList aafNiveau3)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeLiquidation1(aafNiveau3), fieldNames);\n     }\n \n@@ -215,7 +229,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> fournirListePrevision(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ActiviteAFinancer aafNiveau3)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListePrevision(aafNiveau3), fieldNames);\n     }\n \n@@ -223,7 +237,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauInfoErreur> ControlerSuppressionLignesEcrituresSpecifiques(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauAbstract tabLignes)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.ControlerSuppressionLignesEcrituresSpecifiques(tabLignes), fieldNames);\n     }\n \n@@ -231,7 +245,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauInfoErreur> supprimerListeLignesEcrituresSpecifiques(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauAbstract tabLignes)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.supprimerListeLignesEcrituresSpecifiques(tabLignes), fieldNames);\n     }\n \n@@ -243,7 +257,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final boolean annulatif,\n             @BodyVariable final Boolean defaut,\n             @BodyVariable final String[] elementsACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeSeriesBordereaux(exercice, sens, annulatif, defaut, elementsACharger), fieldNames);\n     }\n \n@@ -252,7 +266,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TypeGestionSens sens,\n             @BodyVariable final Boolean reprise)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeBordereauxPreparatoires(sens, reprise), fieldNames);\n     }\n \n@@ -262,7 +276,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final Liq liq,\n             @BodyVariable final TableauInfoErreur tabErreur,\n             @BodyVariable final String lienAttribut)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.controlerSaisieLiq(liq, tabErreur, lienAttribut), fieldNames);\n     }\n \n@@ -270,7 +284,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauInfoErreur> controlerValiditeTypeReelOrdreCompte(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liquidation)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.controlerValiditeTypeReelOrdreCompte(liquidation), fieldNames);\n     }\n \n@@ -278,7 +292,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> verifierSiExecutionBudgetChargeePourLiq(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante tabLiq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.verifierSiExecutionBudgetChargeePourLiq(tabLiq), fieldNames);\n     }\n \n@@ -286,7 +300,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ArrayList> fournirListeAafNiv3PourLiq(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante listeLiq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeAafNiv3PourLiq(listeLiq), fieldNames);\n     }\n \n@@ -297,7 +311,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final int exerciceId,\n             @BodyVariable final boolean origine,\n             @BodyVariable final boolean parAvance)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLiquidationLieOPFECCA(liqId, exerciceId, origine, parAvance);\n     }\n \n@@ -306,7 +320,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauAbstract tabLignesSelectionnees,\n             @BodyVariable final TableauAbstract tabLignesLiees)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.controlerSuppressionEcrituresSpecifiques(tabLignesSelectionnees, tabLignesLiees), fieldNames);\n     }\n \n@@ -314,7 +328,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Collectivite> fournirCollectivite(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int collectiviteId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirCollectivite(collectiviteId), fieldNames);\n     }\n \n@@ -322,7 +336,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ExerciceComptable> fournirExerciceComptable(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirExerciceComptable(exerciceId), fieldNames);\n     }\n \n@@ -330,7 +344,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ListePersonnalisable> chargerListeServiceEmetteur(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final String code)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeServiceEmetteur(code), fieldNames);\n     }\n \n@@ -338,7 +352,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Association> chargerListeSelectionEcheance(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante tabEngagement)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeSelectionEcheance(tabEngagement), fieldNames);\n     }\n \n@@ -346,7 +360,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ArrayList> majDonneesComboNature(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.majDonneesComboNature(liq), fieldNames);\n     }\n \n@@ -354,7 +368,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Liq> ventilerLiqParSectionImputation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.ventilerLiqParSectionImputation(liq), fieldNames);\n     }\n \n@@ -362,7 +376,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ExecutionBudget> ventilerExecutionBudgetSurSectionImputationParDefaut(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ExecutionBudget eb)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.ventilerExecutionBudgetSurSectionImputationParDefaut(eb), fieldNames);\n     }\n \n@@ -370,7 +384,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Liquidation> modifierEntiteLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liquidation liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.modifierEntiteLiquidation(liq), fieldNames);\n     }\n \n@@ -378,7 +392,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Liquidation> liqToLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.liqToLiquidation(liq), fieldNames);\n     }\n \n@@ -387,14 +401,14 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liq,\n             @BodyVariable final boolean modifierEtatEb)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.liqToLiquidation1(liq, modifierEtatEb), fieldNames);\n     }\n \n     @PostMapping(\"/fournirBordereauPreparatoireReprise\")\n     public BLFilterMappingJacksonValue<BordereauPreparatoire> fournirBordereauPreparatoireReprise(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirBordereauPreparatoireReprise(), fieldNames);\n     }\n \n@@ -402,7 +416,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> fournirListePjUtilisateur(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final RechercheParametres params)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListePjUtilisateur(params), fieldNames);\n     }\n \n@@ -411,7 +425,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idLiquidationSet,\n             @BodyVariable final int idPjUtilisateur)\n-            throws RemoteException {\n+                    throws RemoteException {\n         ucMandatTitreService.associerPJaListeLiquidation(idLiquidationSet, idPjUtilisateur);\n     }\n \n@@ -420,7 +434,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idLiquidationSet,\n             @BodyVariable final boolean tipi)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.modifierTipiListeLiquidation(idLiquidationSet, tipi), fieldNames);\n     }\n \n@@ -436,7 +450,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<DelaiPaiement> fournirDelaiPaiementValide(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Date datePourRechercheDelaiPaiement)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirDelaiPaiementValide(datePourRechercheDelaiPaiement), fieldNames);\n     }\n \n@@ -452,7 +466,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<LiquidationDTO>> chargerListeLiquidationDTO(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final SelectionMandatTitre selectionMandatTitre)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeLiquidationDTO(selectionMandatTitre), fieldNames);\n     }\n \n@@ -468,7 +482,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<Liq>> chargerListeLiqByListeIdentifant(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idLiquidationSet)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeLiqByListeIdentifant(idLiquidationSet), fieldNames);\n     }\n \n@@ -484,7 +498,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Echange> processValiderLiquidations(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idLiqAValiderSet)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.processValiderLiquidations(idLiqAValiderSet), fieldNames);\n     }\n \n@@ -500,7 +514,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TiersComptable> chargerTiersComptable1(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idTiers)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerTiersComptable1(idTiers), fieldNames);\n     }\n \n@@ -509,7 +523,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Budget budget,\n             @BodyVariable final Integer millesime)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeSectionImputationValides(budget, millesime), fieldNames);\n     }\n \n@@ -523,7 +537,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<Liq>> fournirListeLiquidationPourJeuEcriture(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final JeuEcriture jeuEcriture)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeLiquidationPourJeuEcriture(jeuEcriture), fieldNames);\n     }\n \n@@ -533,7 +547,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final ExecutionBudget ebOrigine,\n             @BodyVariable final ExecutionBudget ebAVentiler,\n             @BodyVariable final ExerciceComptable exerciceEbAVentiler)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.ventilerEbSurSectionImputationParEb(ebOrigine, ebAVentiler, exerciceEbAVentiler), fieldNames);\n     }\n \n@@ -543,14 +557,14 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     @PostMapping(\"/fournirTribunalParDefaut\")\n     public BLFilterMappingJacksonValue<Tribunal> fournirTribunalParDefaut(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirTribunalParDefaut(), fieldNames);\n     }\n \n     @PostMapping(\"/fournirListeTribunal\")\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<Tribunal>> fournirListeTribunal(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirListeTribunal(), fieldNames);\n     }\n \n@@ -559,7 +573,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liquidation liquidation,\n             @BodyVariable final TableauInfoErreur tableauInfoErreur)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.modifierLiquidation(liquidation, tableauInfoErreur);\n     }\n \n@@ -576,7 +590,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<LiquidationDTO> completerLiquidationDTOAvecJeuEtContrepartie(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final LiquidationDTO liquidationDTO)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.completerLiquidationDTOAvecJeuEtContrepartie(liquidationDTO), fieldNames);\n     }\n \n@@ -595,7 +609,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante<Liq> listeLiq,\n             @BodyVariable final TypeGestionReelOrdre typeGestionReelOrdre)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.changerTypeGestionReelOrdre(listeLiq, typeGestionReelOrdre), fieldNames);\n     }\n \n@@ -613,7 +627,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TypeGestionSens sens,\n             @BodyVariable final ModeleMouvement modeleMouvement)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournierPieceModeleMouvement(sens, modeleMouvement), fieldNames);\n     }\n \n@@ -642,7 +656,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final ExerciceComptable exerciceComptable,\n             @BodyVariable final RechercheParametres parametres,\n             @BodyVariable final String[] sousNiveaux)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerLignesEngagementsPluriannuelles(exerciceComptable, parametres, sousNiveaux), fieldNames);\n     }\n \n@@ -660,7 +674,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<APAE> chargerAPAE(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int id)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerAPAE(id), fieldNames);\n     }\n \n@@ -669,7 +683,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liquidation,\n             @BodyVariable final boolean isCodeProduitVisible)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.isEnregistrementAutorise(liquidation, isCodeProduitVisible), fieldNames);\n     }\n \n@@ -688,7 +702,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isLieABudgetGestionASAP(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLieABudgetGestionASAP(exerciceComptableId);\n     }\n \n@@ -707,7 +721,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isLieABudgetEditionTIP(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLieABudgetEditionTIP(exerciceComptableId);\n     }\n \n@@ -726,7 +740,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isLieABudgetTIPSepa(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLieABudgetTIPSepa(exerciceComptableId);\n     }\n \n@@ -745,7 +759,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isLieABudgetAsapUtilisationEditique(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLieABudgetAsapUtilisationEditique(exerciceComptableId);\n     }\n \n@@ -764,7 +778,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isLieABudgetAsapUtilisationChorusPro(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int exerciceComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isLieABudgetAsapUtilisationChorusPro(exerciceComptableId);\n     }\n \n@@ -772,7 +786,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public String chargerModaliteReglement(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int budgetId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.chargerModaliteReglement(budgetId);\n     }\n \n@@ -789,7 +803,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<Association<PJUtilisateurPourAssociationLiquidationDTO>> chargerListePJUtilisateurPourAssociationLiquidationDTO(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idCollectivite)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListePJUtilisateurPourAssociationLiquidationDTO(idCollectivite), fieldNames);\n     }\n \n@@ -805,7 +819,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public String obtenirCodeLibelleCollectivite(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idCollectivite)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.obtenirCodeLibelleCollectivite(idCollectivite);\n     }\n \n@@ -821,7 +835,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<ConfigEditionPieceEchange> chargerConfigEditionPiecePourBudget(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerConfigEditionPiecePourBudget(idBudget), fieldNames);\n     }\n \n@@ -832,7 +846,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @BodyVariable final boolean multiBudget,\n             @BodyVariable final int idCollectivite,\n             @BodyVariable final int idBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isUtilsateurConcerneParHabilitationEtExisteAxeGC(multiCollectivite, multiBudget, idCollectivite, idBudget);\n     }\n \n@@ -840,7 +854,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TiersComptable> fournirTiersComptablePourSwl_ServiceTC(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int tiersComptableId)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirTiersComptablePourSwl_ServiceTC(tiersComptableId), fieldNames);\n     }\n \n@@ -848,7 +862,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isExistsPJPesFactureTransmise(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Association<PJUtilisateur> pjUtilisateurListe)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isExistsPJPesFactureTransmise(pjUtilisateurListe);\n     }\n \n@@ -856,7 +870,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<PJUtilisateur> determinerFiltreSelectionPJUtilisateurPourLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liquidation liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.determinerFiltreSelectionPJUtilisateurPourLiquidation(liq), fieldNames);\n     }\n \n@@ -864,7 +878,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerPJJustifiantPaimentNonSelectionne(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante<PJUtilisateur> pjSelectionne)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerPJJustifiantPaimentNonSelectionne(pjSelectionne), fieldNames);\n     }\n \n@@ -872,7 +886,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isExericiceClosOuCompteGestionArreteOuCaArrete(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idExercice)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isExericiceClosOuCompteGestionArreteOuCaArrete(idExercice);\n     }\n \n@@ -880,7 +894,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerListePJUtilisateurALiquiderParListeIdEngagement(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idEngagementSet)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListePJUtilisateurALiquiderParListeIdEngagement(idEngagementSet), fieldNames);\n     }\n \n@@ -888,7 +902,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerPJUtilisateurLieMarche(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idMarche)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerPJUtilisateurLieMarche(idMarche), fieldNames);\n     }\n \n@@ -896,7 +910,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerPJUtilisateurLieAPAEviaOperation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int IdOperation)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerPJUtilisateurLieAPAEviaOperation(IdOperation), fieldNames);\n     }\n \n@@ -904,7 +918,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerPJUtilisateurAJouterParListeExecution(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Association<ExecutionBudget> executionBudgetListe)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerPJUtilisateurAJouterParListeExecution(executionBudgetListe), fieldNames);\n     }\n \n@@ -912,7 +926,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public boolean isColonneCodeProduitVisible(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idExercice)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.isColonneCodeProduitVisible(idExercice);\n     }\n \n@@ -920,7 +934,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> chargerListeCodeProduitLocal(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final ExerciceComptable exercice)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeCodeProduitLocal(exercice), fieldNames);\n     }\n \n@@ -929,7 +943,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final CodeProduitLocal codeProduit,\n             @BodyVariable final List<Integer> idsExecutionBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.modifierCodeProduitLocalSurExecutionBudget(codeProduit, idsExecutionBudget), fieldNames);\n     }\n \n@@ -937,7 +951,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public Double calculMontantAnnule(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idEB_Liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.calculMontantAnnule(idEB_Liq);\n     }\n \n@@ -946,7 +960,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idBudget,\n             @BodyVariable final boolean visibleSurBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerListeTCPourTiersSolidaires(idBudget, visibleSurBudget), fieldNames);\n     }\n \n@@ -957,7 +971,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<EchangeEntite> creerLiqAvecMajEnsu(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Liq liq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.creerLiqAvecMajEnsu(liq), fieldNames);\n     }\n \n@@ -966,7 +980,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final List<Integer> idsExecutionBudget,\n             @BodyVariable final Integer idEtiquette)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.majEtiquetteExecutionBudget(idsExecutionBudget, idEtiquette), fieldNames);\n     }\n \n@@ -974,7 +988,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante> fournirExecutionBudgetLiquidation(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final Set<Integer> idLiquidationSet)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.fournirExecutionBudgetLiquidation(idLiquidationSet), fieldNames);\n     }\n \n@@ -982,7 +996,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauInfoErreur> discocierListeLignesEcrituresSpecifiques(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final TableauEntitePersistante tabLignesLiq)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.discocierListeLignesEcrituresSpecifiques(tabLignesLiq), fieldNames);\n     }\n \n@@ -990,7 +1004,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public BLFilterMappingJacksonValue<TableauEntitePersistante<PJUtilisateur>> chargerPJUtilisateurLieTiers(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idTiers)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return new BLFilterMappingJacksonValue<>(ucMandatTitreService.chargerPJUtilisateurLieTiers(idTiers), fieldNames);\n     }\n \n@@ -998,7 +1012,7 @@ public class UcMandatTitreControleur extends UseCaseIntfMetierControleur {\n     public String fournirCodeRegieTiers(\n             @RequestParam(value=\"fieldNames[]\", required = false) String[] fieldNames,\n             @BodyVariable final int idTiers)\n-            throws RemoteException {\n+                    throws RemoteException {\n         return ucMandatTitreService.fournirCodeRegieTiers(idTiers);\n     }\n }\n\\ No newline at end of file\n",
        "new_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreControleur.java",
        "old_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreControleur.java",
        "a_mode": "100644",
        "b_mode": "100644",
        "new_file": false,
        "renamed_file": false,
        "deleted_file": false
    },
    {
        "diff": "@@ -10,6 +10,8 @@ import java.util.Set;\n import org.springframework.stereotype.Service;\n \n import fr.bl.avenir.gf.rest.ecompta.communbaomtechnique.transverse.UseCaseIntfMetierService;\n+import fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.dto.ExecutionBudgetResource;\n+import fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.transform.ExecutionBudgetResourceTransformer;\n import fr.magnus.activiteafinancer.transverse.ActiviteAFinancer;\n import fr.magnus.budget.transverse.APAE;\n import fr.magnus.budget.transverse.Budget;\n@@ -68,7 +70,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public Liq chargerLiq(final int id,\n             final boolean chargerHistorique)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.chargerLiq(id, chargerHistorique);\n     }\n@@ -84,7 +86,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n     public ExerciceComptable fournirImputationDossierTravail(final ExerciceComptable exercice,\n             final TypeGestionSens sens,\n             final PieceModeleMouvement pmmvt)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournirImputationDossierTravail(exercice, sens, pmmvt);\n     }\n@@ -108,7 +110,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n             final ExerciceComptable exercice,\n             final Liquidation liquidationDestination,\n             final boolean annuler)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.annulerEcriture(liquidationOrigine, exercice, liquidationDestination, annuler);\n     }\n@@ -137,15 +139,30 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauEntitePersistante chargerListeExecutionBudget(final RechercheParametres param,\n             final String[] elementACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.chargerListeExecutionBudget(param, elementACharger);\n     }\n \n+    public List<ExecutionBudgetResource> chargerListeExecutionBudget2(final RechercheParametres param,\n+            final String[] elementAcharger) throws RemoteException {\n+        final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n+\n+        TableauEntitePersistante<ExecutionBudget> executionBudgetList = ucMandatTitreImpl\n+                .chargerListeExecutionBudget(param, elementAcharger);\n+\n+        List<ExecutionBudgetResource> executionBudgetResources = new ArrayList<>();\n+\n+        executionBudgetList.getDonnees().forEach(executionBudget -> executionBudgetResources\n+                .add(ExecutionBudgetResourceTransformer.toResource(executionBudget)));\n+\n+        return executionBudgetResources;\n+    }\n+\n \n     public ExecutionBudget chargerExecutionBudget(final int id,\n             final String[] elementACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.chargerExecutionBudget(id, elementACharger);\n     }\n@@ -153,7 +170,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauEntitePersistante fournirListeLigneNonDegage(final Liquidation liquidation,\n             final HashMap tableauEnUtilise)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournirListeLigneNonDegage(liquidation, tableauEnUtilise);\n     }\n@@ -168,7 +185,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public ExerciceComptable completerExerciceSaufListeCompte(final ExerciceComptable exercice,\n             final PieceModeleMouvement pmmvt)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.completerExerciceSaufListeCompte(exercice, pmmvt);\n     }\n@@ -214,7 +231,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n             final boolean annulatif,\n             final Boolean defaut,\n             final String[] elementsACharger)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournirListeSeriesBordereaux(exercice, sens, annulatif, defaut, elementsACharger);\n     }\n@@ -222,7 +239,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauEntitePersistante fournirListeBordereauxPreparatoires(final TypeGestionSens sens,\n             final Boolean reprise)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournirListeBordereauxPreparatoires(sens, reprise);\n     }\n@@ -231,7 +248,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n     public TableauInfoErreur controlerSaisieLiq(final Liq liq,\n             final TableauInfoErreur tabErreur,\n             final String lienAttribut)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.controlerSaisieLiq(liq, tabErreur, lienAttribut);\n     }\n@@ -262,7 +279,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n             final int exerciceId,\n             final boolean origine,\n             final boolean parAvance)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.isLiquidationLieOPFECCA(liqId, exerciceId, origine, parAvance);\n     }\n@@ -270,7 +287,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauInfoErreur controlerSuppressionEcrituresSpecifiques(final TableauAbstract tabLignesSelectionnees,\n             final TableauAbstract tabLignesLiees)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.controlerSuppressionEcrituresSpecifiques(tabLignesSelectionnees, tabLignesLiees);\n     }\n@@ -341,7 +358,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public Liquidation liqToLiquidation1(final Liq liq,\n             final boolean modifierEtatEb)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.liqToLiquidation(liq, modifierEtatEb);\n     }\n@@ -363,7 +380,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public void associerPJaListeLiquidation(final Set<Integer> idLiquidationSet,\n             final int idPjUtilisateur)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         ucMandatTitreImpl.associerPJaListeLiquidation(idLiquidationSet, idPjUtilisateur);\n     }\n@@ -371,7 +388,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauInfoErreur modifierTipiListeLiquidation(final Set<Integer> idLiquidationSet,\n             final boolean tipi)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.modifierTipiListeLiquidation(idLiquidationSet, tipi);\n     }\n@@ -454,7 +471,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauEntitePersistante fournirListeSectionImputationValides(final Budget budget,\n             final Integer millesime)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournirListeSectionImputationValides(budget, millesime);\n     }\n@@ -476,7 +493,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n     public ExecutionBudget ventilerEbSurSectionImputationParEb(final ExecutionBudget ebOrigine,\n             final ExecutionBudget ebAVentiler,\n             final ExerciceComptable exerciceEbAVentiler)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.ventilerEbSurSectionImputationParEb(ebOrigine, ebAVentiler, exerciceEbAVentiler);\n     }\n@@ -501,7 +518,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public boolean modifierLiquidation(final Liquidation liquidation,\n             final TableauInfoErreur tableauInfoErreur)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.modifierLiquidation(liquidation, tableauInfoErreur);\n     }\n@@ -535,7 +552,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauInfoErreur changerTypeGestionReelOrdre(final TableauEntitePersistante<Liq> listeLiq,\n             final TypeGestionReelOrdre typeGestionReelOrdre)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.changerTypeGestionReelOrdre(listeLiq, typeGestionReelOrdre);\n     }\n@@ -552,7 +569,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public PieceModeleMouvement fournierPieceModeleMouvement(final TypeGestionSens sens,\n             final ModeleMouvement modeleMouvement)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.fournierPieceModeleMouvement(sens, modeleMouvement);\n     }\n@@ -580,7 +597,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n     public TableauEntitePersistante<ExecutionBudget> chargerLignesEngagementsPluriannuelles(final ExerciceComptable exerciceComptable,\n             final RechercheParametres parametres,\n             final String[] sousNiveaux)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.chargerLignesEngagementsPluriannuelles(exerciceComptable, parametres, sousNiveaux);\n     }\n@@ -605,7 +622,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauAbstract<InfoErreur> isEnregistrementAutorise(final Liq liquidation,\n             final boolean isCodeProduitVisible)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.isEnregistrementAutorise(liquidation, isCodeProduitVisible);\n     }\n@@ -758,7 +775,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n             final boolean multiBudget,\n             final int idCollectivite,\n             final int idBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.isUtilsateurConcerneParHabilitationEtExisteAxeGC(multiCollectivite, multiBudget, idCollectivite, idBudget);\n     }\n@@ -843,7 +860,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauInfoErreur modifierCodeProduitLocalSurExecutionBudget(final CodeProduitLocal codeProduit,\n             final List<Integer> idsExecutionBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.modifierCodeProduitLocalSurExecutionBudget(codeProduit, idsExecutionBudget);\n     }\n@@ -858,7 +875,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauEntitePersistante<TiersComptable> chargerListeTCPourTiersSolidaires(final int idBudget,\n             final boolean visibleSurBudget)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.chargerListeTCPourTiersSolidaires(idBudget, visibleSurBudget);\n     }\n@@ -876,7 +893,7 @@ public class UcMandatTitreService extends UseCaseIntfMetierService {\n \n     public TableauInfoErreur majEtiquetteExecutionBudget(final List<Integer> idsExecutionBudget,\n             final Integer idEtiquette)\n-            throws RemoteException {\n+                    throws RemoteException {\n         final UcMandatTitreIntf ucMandatTitreImpl = this.create();\n         return ucMandatTitreImpl.majEtiquetteExecutionBudget(idsExecutionBudget, idEtiquette);\n     }\n",
        "new_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreService.java",
        "old_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreService.java",
        "a_mode": "100644",
        "b_mode": "100644",
        "new_file": false,
        "renamed_file": false,
        "deleted_file": false
    },
    {
        "diff": "@@ -0,0 +1,22 @@\n+package fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.dto;\n+\n+import fr.magnus.budget.transverse.enums.TypeOperation;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+public class ExecutionBudgetResource {\n+    private boolean annuleOuReduit = false;\n+    private String codeCompteUtilisateur = \"\";\n+    private TypeOperation typeOperation = TypeOperation.NON_RENSEIGNE;\n+    private String service = \"\";\n+    private String centre = \"\";\n+    private String fonction = \"\";\n+\n+    private Float tauxTva = Float.valueOf(0);\n+    private Double montantHorsTaxe = Double.valueOf(0);\n+    private Double montantTva = Double.valueOf(0);\n+    private Double montantTvaRecuperable = Double.valueOf(0);\n+    private Double montantTtc = Double.valueOf(0);\n+}\n",
        "new_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/dto/ExecutionBudgetResource.java",
        "old_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/dto/ExecutionBudgetResource.java",
        "a_mode": "0",
        "b_mode": "100644",
        "new_file": true,
        "renamed_file": false,
        "deleted_file": false
    },
    {
        "diff": "@@ -0,0 +1,64 @@\n+package fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.transform;\n+\n+import fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.dto.ExecutionBudgetResource;\n+import fr.magnus.executionbudget.transverse.ExecutionBudget;\n+\n+public class ExecutionBudgetResourceTransformer {\n+    private ExecutionBudgetResourceTransformer() {\n+    }\n+\n+    public static ExecutionBudgetResource toResource(ExecutionBudget executionBudget) {\n+        ExecutionBudgetResource executionBudgetResource = new ExecutionBudgetResource();\n+\n+        if (executionBudget.getExecutionBudgetGenereeListe() != null\n+                && !executionBudget.getExecutionBudgetGenereeListe().getDonnees().isEmpty()) {\n+            executionBudgetResource.setAnnuleOuReduit(true);\n+        }\n+\n+        if (executionBudget.getCompteUtilisateurRef() != null\n+                && executionBudget.getCompteUtilisateurRef().getCode() != null) {\n+            executionBudgetResource.setCodeCompteUtilisateur(executionBudget.getCompteUtilisateurRef().getCode());\n+        }\n+\n+        if (executionBudget.getOperationdInvestissementRef() != null\n+                && executionBudget.getOperationdInvestissementRef().getTypeOperation() != null) {\n+            executionBudgetResource\n+            .setTypeOperation(executionBudget.getOperationdInvestissementRef().getTypeOperation());\n+        }\n+\n+        if (executionBudget.getElemAxe1() != null && executionBudget.getElemAxe1().getCode() != null) {\n+            executionBudgetResource.setService(executionBudget.getElemAxe1().getCode());\n+        }\n+\n+        if (executionBudget.getElemAxe2() != null && executionBudget.getElemAxe2().getCode() != null) {\n+            executionBudgetResource.setCentre(executionBudget.getElemAxe2().getCode());\n+        }\n+\n+        if (executionBudget.getFonctionUtilisateurRef() != null\n+                && executionBudget.getFonctionUtilisateurRef().getCode() != null) {\n+            executionBudgetResource.setFonction(executionBudget.getFonctionUtilisateurRef().getCode());\n+        }\n+\n+        if (executionBudget.getTvaRef() != null && executionBudget.getTvaRef().getTauxTva() != null) {\n+            executionBudgetResource.setTauxTva(executionBudget.getTvaRef().getTauxTva());\n+        }\n+\n+        if (executionBudget.getMontantHorsTaxe() != null) {\n+            executionBudgetResource.setMontantHorsTaxe(executionBudget.getMontantHorsTaxe());\n+        }\n+\n+        if (executionBudget.getMontantTVA() != null) {\n+            executionBudgetResource.setMontantTva(executionBudget.getMontantTVA());\n+        }\n+\n+        if (executionBudget.getMontantTvaRecuperable() != null) {\n+            executionBudgetResource.setMontantTvaRecuperable(executionBudget.getMontantTvaRecuperable());\n+        }\n+\n+        if (executionBudget.getMontantTTC() != null) {\n+            executionBudgetResource.setMontantTtc(executionBudget.getMontantTTC());\n+        }\n+\n+        return executionBudgetResource;\n+    }\n+}\n",
        "new_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/transform/ExecutionBudgetResourceTransformer.java",
        "old_path": "avgf-services/src/main/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/transform/ExecutionBudgetResourceTransformer.java",
        "a_mode": "0",
        "b_mode": "100644",
        "new_file": true,
        "renamed_file": false,
        "deleted_file": false
    },
    {
        "diff": "@@ -0,0 +1,74 @@\n+package fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.rmi.RemoteException;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.Spy;\n+\n+import fr.bl.avenir.gf.rest.ecompta.ucmandattitre.transverse.dto.ExecutionBudgetResource;\n+import fr.magnus.budget.transverse.enums.TypeOperation;\n+import fr.magnus.executionbudget.transverse.ExecutionBudget;\n+import fr.magnus.reftechnique.transverse.association.Association;\n+import fr.magnus.reftechnique.transverse.recherche.RechercheParametres;\n+import fr.magnus.reftechnique.transverse.tableau.TableauEntitePersistante;\n+import fr.magnus.ucmandattitre.transverse.UcMandatTitreIntf;\n+\n+public class UcMandatTitreServiceTest {\n+    @Spy\n+    private UcMandatTitreService ucMandatTitreService;\n+\n+    public UcMandatTitreServiceTest() {\n+        MockitoAnnotations.openMocks(this);\n+    }\n+\n+    @Test\n+    void testChargerListeExecutionBudget2() throws RemoteException {\n+        // Given\n+        RechercheParametres rechercheParametres = new RechercheParametres();\n+        rechercheParametres.addCritere(ExecutionBudget.class, \"liquidationRef.id\",\n+                12345);\n+\n+        String[] elementAcharger = { \"compteUtilisateurRef\", \"fonctionUtilisateurRef\", \"operationdInvestissementRef\",\n+                \"elemAxe1\", \"elemAxe2\", \"executionBudgetOrigineListe\", \"executionBudgetGenereeListe\", \"tvaRef\" };\n+\n+        ExecutionBudget executionBudgetGeneree = new ExecutionBudget();\n+\n+        Association<ExecutionBudget> executionBudgetGenereeList = new Association<ExecutionBudget>(\n+                new TableauEntitePersistante<ExecutionBudget>(List.of(executionBudgetGeneree)));\n+\n+        ExecutionBudget executionBudget = new ExecutionBudget();\n+        executionBudget.setExecutionBudgetGenereeListe(executionBudgetGenereeList);\n+\n+        TableauEntitePersistante<ExecutionBudget> executionBudgetList = new TableauEntitePersistante<ExecutionBudget>(\n+                List.of(executionBudget));\n+\n+        UcMandatTitreIntf ucMandatTitreImpl = Mockito.mock(UcMandatTitreIntf.class);\n+        Mockito.doReturn(ucMandatTitreImpl).when(ucMandatTitreService).create();\n+        Mockito.when(ucMandatTitreImpl.chargerListeExecutionBudget(rechercheParametres, elementAcharger))\n+        .thenReturn(executionBudgetList);\n+\n+        // When\n+        List<ExecutionBudgetResource> returnedExecutionBudgetResourceList = ucMandatTitreService\n+                .chargerListeExecutionBudget2(rechercheParametres, elementAcharger);\n+\n+        // Then\n+        assertNotNull(returnedExecutionBudgetResourceList);\n+        assertEquals(true, returnedExecutionBudgetResourceList.get(0).isAnnuleOuReduit());\n+        assertEquals(\"\", returnedExecutionBudgetResourceList.get(0).getCodeCompteUtilisateur());\n+        assertEquals(TypeOperation.NON_RENSEIGNE, returnedExecutionBudgetResourceList.get(0).getTypeOperation());\n+        assertEquals(\"\", returnedExecutionBudgetResourceList.get(0).getService());\n+        assertEquals(\"\", returnedExecutionBudgetResourceList.get(0).getCentre());\n+        assertEquals(\"\", returnedExecutionBudgetResourceList.get(0).getFonction());\n+        assertEquals(Float.valueOf(0), returnedExecutionBudgetResourceList.get(0).getTauxTva(), 0.0f);\n+        assertEquals(Double.valueOf(0), returnedExecutionBudgetResourceList.get(0).getMontantHorsTaxe(), 0.0d);\n+        assertEquals(Double.valueOf(0), returnedExecutionBudgetResourceList.get(0).getMontantTva(), 0.0d);\n+        assertEquals(Double.valueOf(0), returnedExecutionBudgetResourceList.get(0).getMontantTvaRecuperable(), 0.0d);\n+        assertEquals(Double.valueOf(0), returnedExecutionBudgetResourceList.get(0).getMontantTtc(), 0.0d);\n+    }\n+}\n",
        "new_path": "avgf-services/src/test/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreServiceTest.java",
        "old_path": "avgf-services/src/test/java/fr/bl/avenir/gf/rest/ecompta/ucmandattitre/transverse/UcMandatTitreServiceTest.java",
        "a_mode": "0",
        "b_mode": "100644",
        "new_file": true,
        "renamed_file": false,
        "deleted_file": false
    }
]'.
]

{ #category : #test }
GLPHModelImporterTest >> testImportDiffOfCommit [

	| glhImporter parseRes|
	glhImporter := GLPHModelImporter new. 
	parseRes :=	glhImporter parseDiffResult: fakeDiffData.
	
	self assert: parseRes size equals: 5.
	
	
]
